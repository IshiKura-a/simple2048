[{"/Users/admin/Studyplace/simple2048/src/index.tsx":"1","/Users/admin/Studyplace/simple2048/src/reportWebVitals.ts":"2","/Users/admin/Studyplace/simple2048/src/App.tsx":"3","/Users/admin/Studyplace/simple2048/src/Block.tsx":"4","/Users/admin/Studyplace/simple2048/src/Timer.tsx":"5"},{"size":500,"mtime":1613962071885,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1613962071885,"results":"8","hashOfConfig":"7"},{"size":4193,"mtime":1613981448385,"results":"9","hashOfConfig":"7"},{"size":740,"mtime":1613962071885,"results":"10","hashOfConfig":"7"},{"size":392,"mtime":1613978214328,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"djy8sq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/admin/Studyplace/simple2048/src/index.tsx",[],["25","26"],"/Users/admin/Studyplace/simple2048/src/reportWebVitals.ts",[],"/Users/admin/Studyplace/simple2048/src/App.tsx",["27","28","29"],"import React, {useEffect, useRef, useState} from 'react';\nimport './App.css';\nimport Block from \"./Block\";\nimport Timer from \"./Timer\";\n\nfunction App() {\n    type Data = number[]\n    type History = Data[]\n    type PosFunc = (i: number, j: number) => number\n    type Validity = (prevIndex: number, curIndex: number) => boolean\n\n    interface MergeFunc {\n        prevPos: PosFunc,\n        curPos: PosFunc,\n        isValid: Validity\n    }\n\n    const [data, updateData] = useState(\n        [2, 2, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0] as Data)\n\n\n    function getScore(): number {\n        return data.reduce((accumulator, currentValue) => accumulator + currentValue)\n    }\n\n\n    useEffect(() => {\n        const mergeFuncList: { [key: string]: MergeFunc } = {\n            \"w\": {\n                prevPos: (i, j) => 4 * j + i - 4,\n                curPos: (i, j) => 4 * j + i,\n                isValid: (prevIndex, curIndex) => prevIndex >= 0\n            },\n            \"a\": {\n                prevPos: (i, j) => 4 * i + j - 1,\n                curPos: (i, j) => 4 * i + j,\n                isValid: (prevIndex, curIndex) => Math.floor(prevIndex / 4) === Math.floor(curIndex / 4)\n            },\n            \"s\": {\n                prevPos: (i, j) => 16 - 4 * j + i,\n                curPos: (i, j) => 12 - 4 * j + i,\n                isValid: (prevIndex, curIndex) => curIndex < 16\n            },\n            \"d\": {\n                prevPos: (i, j) => 4 * i + 4 - j,\n                curPos: (i, j) => 4 * i + 3 - j,\n                isValid: (prevIndex, curIndex) => Math.floor(prevIndex / 4) === Math.floor(curIndex / 4)\n            }\n        }\n\n        function randomNewNumber(state: Data): Data {\n            let zeros = state.map((v, idx) => v === 0 ? idx : 0).filter(v => v !== 0)\n            state[zeros.reduce((accumulator, currentValue) =>\n                Math.random() >= 1 / zeros.length ? accumulator : currentValue, zeros[0])] = 2\n            return state\n        }\n\n        function merge(state: Data, prevPos: PosFunc, curPos: PosFunc, isValid: Validity): Data {\n            for (let i = 0; i < 4; i++) {\n                let flag = true\n                while (flag) {\n                    flag = false\n                    for (let j = 0; j < 4; j++) {\n                        const prevIndex = prevPos(i, j)\n                        const curIndex = curPos(i, j)\n                        if (!isValid(prevIndex, curIndex) || state[curIndex] === 0)\n                            continue\n                        if (state[prevIndex] === 0) {\n                            flag = true\n                            state[prevIndex] = state[curIndex]\n                            state[curIndex] = 0\n                        } else if (state[prevIndex] === state[curIndex]) {\n                            flag = true\n                            state[prevIndex] *= 2\n                            state[curIndex] = 0\n                        }\n                    }\n                }\n            }\n            return state\n        }\n\n        window.addEventListener(\"keypress\", (e: any) => {\n            if ([\"w\", \"a\", \"s\", \"d\"].includes(e.key)) {\n                console.log(e.key)\n                const func = mergeFuncList[e.key]\n                const state = randomNewNumber(merge(data.concat(), func.prevPos, func.curPos, func.isValid).concat())\n                updateData(state)\n            } else if (e.key === \"u\") {\n                console.log(data)\n            }\n        })\n    }, [])\n\n    function rawElements(beginIndex: number, endIndex: number) {\n        return data.map((v, index) => <td key={index}><Block value={v}/></td>)\n            .filter((v, index) => index >= beginIndex && index < endIndex)\n    }\n\n    return (\n        <div className=\"App\">\n            <h2>Simple 2048 Project</h2>\n            <Timer/>\n            <div className=\"Score\">Score:{getScore()}</div>\n            <table className=\"Game\">\n                <tr>{rawElements(0, 4)}</tr>\n                <tr>{rawElements(4, 8)}</tr>\n                <tr>{rawElements(8, 12)}</tr>\n                <tr>{rawElements(12, 16)}</tr>\n            </table>\n\n        </div>\n    );\n}\n\nexport default App;\n","/Users/admin/Studyplace/simple2048/src/Block.tsx",[],["30","31"],"/Users/admin/Studyplace/simple2048/src/Timer.tsx",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":27,"nodeType":"38","messageId":"39","endLine":1,"endColumn":33},{"ruleId":"36","severity":1,"message":"40","line":8,"column":10,"nodeType":"38","messageId":"39","endLine":8,"endColumn":17},{"ruleId":"41","severity":1,"message":"42","line":96,"column":8,"nodeType":"43","endLine":96,"endColumn":10,"suggestions":"44"},{"ruleId":"32","replacedBy":"45"},{"ruleId":"34","replacedBy":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'History' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["49"],["47"],["48"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [data]",{"range":"52","text":"53"},[3510,3512],"[data]"]